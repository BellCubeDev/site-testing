function parser3(hljs) {
    const CURLY_SUBCOMMENT = hljs.COMMENT(/\{/, /\}/, { contains: ['self'] });
    return {
        name: 'Parser3',
        subLanguage: 'xml',
        relevance: 0,
        contains: [
            hljs.COMMENT('^#', '$'),
            hljs.COMMENT(/\^rem\{/, /\}/, {
                relevance: 10,
                contains: [CURLY_SUBCOMMENT]
            }),
            {
                className: 'meta',
                begin: '^@(?:BASE|USE|CLASS|OPTIONS)$',
                relevance: 10
            },
            {
                className: 'title',
                begin: '@[\\w\\-]+\\[[\\w^;\\-]*\\](?:\\[[\\w^;\\-]*\\])?(?:.*)$'
            },
            {
                className: 'variable',
                begin: /\$\{?[\w\-.:]+\}?/
            },
            {
                className: 'keyword',
                begin: /\^[\w\-.:]+/
            },
            {
                className: 'number',
                begin: '\\^#[0-9a-fA-F]+'
            },
            hljs.C_NUMBER_MODE
        ]
    };
}
export { parser3 as default };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VyMy5qcyIsInNvdXJjZVJvb3QiOiJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vQmVsbEN1YmVEZXYvc2l0ZS10ZXN0aW5nL2RlcGxveW1lbnQvIiwic291cmNlcyI6WyJhc3NldHMvc2l0ZS9oaWdobGlnaHRfanMvbGFuZ3VhZ2VzL3BhcnNlcjMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUEsU0FBUyxPQUFPLENBQUMsSUFBSTtJQUNuQixNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQ25DLElBQUksRUFDSixJQUFJLEVBQ0osRUFBRSxRQUFRLEVBQUUsQ0FBRSxNQUFNLENBQUUsRUFBRSxDQUN6QixDQUFDO0lBQ0YsT0FBTztRQUNMLElBQUksRUFBRSxTQUFTO1FBQ2YsV0FBVyxFQUFFLEtBQUs7UUFDbEIsU0FBUyxFQUFFLENBQUM7UUFDWixRQUFRLEVBQUU7WUFDUixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUM7WUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FDVixTQUFTLEVBQ1QsSUFBSSxFQUNKO2dCQUNFLFNBQVMsRUFBRSxFQUFFO2dCQUNiLFFBQVEsRUFBRSxDQUFFLGdCQUFnQixDQUFFO2FBQy9CLENBQ0Y7WUFDRDtnQkFDRSxTQUFTLEVBQUUsTUFBTTtnQkFDakIsS0FBSyxFQUFFLCtCQUErQjtnQkFDdEMsU0FBUyxFQUFFLEVBQUU7YUFDZDtZQUNEO2dCQUNFLFNBQVMsRUFBRSxPQUFPO2dCQUNsQixLQUFLLEVBQUUsMERBQTBEO2FBQ2xFO1lBQ0Q7Z0JBQ0UsU0FBUyxFQUFFLFVBQVU7Z0JBQ3JCLEtBQUssRUFBRSxtQkFBbUI7YUFDM0I7WUFDRDtnQkFDRSxTQUFTLEVBQUUsU0FBUztnQkFDcEIsS0FBSyxFQUFFLGFBQWE7YUFDckI7WUFDRDtnQkFDRSxTQUFTLEVBQUUsUUFBUTtnQkFDbkIsS0FBSyxFQUFFLGtCQUFrQjthQUMxQjtZQUNELElBQUksQ0FBQyxhQUFhO1NBQ25CO0tBQ0YsQ0FBQztBQUNKLENBQUM7QUFFRCxPQUFPLEVBQUUsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkxhbmd1YWdlOiBQYXJzZXIzXG5SZXF1aXJlczogeG1sLmpzXG5BdXRob3I6IE9sZWcgVm9sY2hrb3YgPG9sZWdAdm9sY2hrb3YubmV0PlxuV2Vic2l0ZTogaHR0cHM6Ly93d3cucGFyc2VyLnJ1L2VuL1xuQ2F0ZWdvcnk6IHRlbXBsYXRlXG4qL1xuXG5mdW5jdGlvbiBwYXJzZXIzKGhsanMpIHtcbiAgY29uc3QgQ1VSTFlfU1VCQ09NTUVOVCA9IGhsanMuQ09NTUVOVChcbiAgICAvXFx7LyxcbiAgICAvXFx9LyxcbiAgICB7IGNvbnRhaW5zOiBbICdzZWxmJyBdIH1cbiAgKTtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnUGFyc2VyMycsXG4gICAgc3ViTGFuZ3VhZ2U6ICd4bWwnLFxuICAgIHJlbGV2YW5jZTogMCxcbiAgICBjb250YWluczogW1xuICAgICAgaGxqcy5DT01NRU5UKCdeIycsICckJyksXG4gICAgICBobGpzLkNPTU1FTlQoXG4gICAgICAgIC9cXF5yZW1cXHsvLFxuICAgICAgICAvXFx9LyxcbiAgICAgICAge1xuICAgICAgICAgIHJlbGV2YW5jZTogMTAsXG4gICAgICAgICAgY29udGFpbnM6IFsgQ1VSTFlfU1VCQ09NTUVOVCBdXG4gICAgICAgIH1cbiAgICAgICksXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ21ldGEnLFxuICAgICAgICBiZWdpbjogJ15AKD86QkFTRXxVU0V8Q0xBU1N8T1BUSU9OUykkJyxcbiAgICAgICAgcmVsZXZhbmNlOiAxMFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiAndGl0bGUnLFxuICAgICAgICBiZWdpbjogJ0BbXFxcXHdcXFxcLV0rXFxcXFtbXFxcXHdeO1xcXFwtXSpcXFxcXSg/OlxcXFxbW1xcXFx3XjtcXFxcLV0qXFxcXF0pPyg/Oi4qKSQnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBjbGFzc05hbWU6ICd2YXJpYWJsZScsXG4gICAgICAgIGJlZ2luOiAvXFwkXFx7P1tcXHdcXC0uOl0rXFx9Py9cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ2tleXdvcmQnLFxuICAgICAgICBiZWdpbjogL1xcXltcXHdcXC0uOl0rL1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiAnbnVtYmVyJyxcbiAgICAgICAgYmVnaW46ICdcXFxcXiNbMC05YS1mQS1GXSsnXG4gICAgICB9LFxuICAgICAgaGxqcy5DX05VTUJFUl9NT0RFXG4gICAgXVxuICB9O1xufVxuXG5leHBvcnQgeyBwYXJzZXIzIGFzIGRlZmF1bHQgfTtcbiJdfQ==