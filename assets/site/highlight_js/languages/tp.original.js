function tp(hljs) {
    const TPID = {
        className: 'number',
        begin: '[1-9][0-9]*',
        relevance: 0
    };
    const TPLABEL = {
        className: 'symbol',
        begin: ':[^\\]]+'
    };
    const TPDATA = {
        className: 'built_in',
        begin: '(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|'
            + 'TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\[',
        end: '\\]',
        contains: [
            'self',
            TPID,
            TPLABEL
        ]
    };
    const TPIO = {
        className: 'built_in',
        begin: '(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\[',
        end: '\\]',
        contains: [
            'self',
            TPID,
            hljs.QUOTE_STRING_MODE,
            TPLABEL
        ]
    };
    const KEYWORDS = [
        "ABORT",
        "ACC",
        "ADJUST",
        "AND",
        "AP_LD",
        "BREAK",
        "CALL",
        "CNT",
        "COL",
        "CONDITION",
        "CONFIG",
        "DA",
        "DB",
        "DIV",
        "DETECT",
        "ELSE",
        "END",
        "ENDFOR",
        "ERR_NUM",
        "ERROR_PROG",
        "FINE",
        "FOR",
        "GP",
        "GUARD",
        "INC",
        "IF",
        "JMP",
        "LINEAR_MAX_SPEED",
        "LOCK",
        "MOD",
        "MONITOR",
        "OFFSET",
        "Offset",
        "OR",
        "OVERRIDE",
        "PAUSE",
        "PREG",
        "PTH",
        "RT_LD",
        "RUN",
        "SELECT",
        "SKIP",
        "Skip",
        "TA",
        "TB",
        "TO",
        "TOOL_OFFSET",
        "Tool_Offset",
        "UF",
        "UT",
        "UFRAME_NUM",
        "UTOOL_NUM",
        "UNLOCK",
        "WAIT",
        "X",
        "Y",
        "Z",
        "W",
        "P",
        "R",
        "STRLEN",
        "SUBSTR",
        "FINDSTR",
        "VOFFSET",
        "PROG",
        "ATTR",
        "MN",
        "POS"
    ];
    const LITERALS = [
        "ON",
        "OFF",
        "max_speed",
        "LPOS",
        "JPOS",
        "ENABLE",
        "DISABLE",
        "START",
        "STOP",
        "RESET"
    ];
    return {
        name: 'TP',
        keywords: {
            keyword: KEYWORDS,
            literal: LITERALS
        },
        contains: [
            TPDATA,
            TPIO,
            {
                className: 'keyword',
                begin: '/(PROG|ATTR|MN|POS|END)\\b'
            },
            {
                className: 'keyword',
                begin: '(CALL|RUN|POINT_LOGIC|LBL)\\b'
            },
            {
                className: 'keyword',
                begin: '\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)'
            },
            {
                className: 'number',
                begin: '\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\b',
                relevance: 0
            },
            hljs.COMMENT('//', '[;$]'),
            hljs.COMMENT('!', '[;$]'),
            hljs.COMMENT('--eg:', '$'),
            hljs.QUOTE_STRING_MODE,
            {
                className: 'string',
                begin: '\'',
                end: '\''
            },
            hljs.C_NUMBER_MODE,
            {
                className: 'variable',
                begin: '\\$[A-Za-z0-9_]+'
            }
        ]
    };
}
export { tp as default };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHAuanMiLCJzb3VyY2VSb290IjoiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0JlbGxDdWJlRGV2L3NpdGUtdGVzdGluZy9kZXBsb3ltZW50LyIsInNvdXJjZXMiOlsiYXNzZXRzL3NpdGUvaGlnaGxpZ2h0X2pzL2xhbmd1YWdlcy90cC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQSxTQUFTLEVBQUUsQ0FBQyxJQUFJO0lBQ2QsTUFBTSxJQUFJLEdBQUc7UUFDWCxTQUFTLEVBQUUsUUFBUTtRQUNuQixLQUFLLEVBQUUsYUFBYTtRQUNwQixTQUFTLEVBQUUsQ0FBQztLQUNiLENBQUM7SUFDRixNQUFNLE9BQU8sR0FBRztRQUNkLFNBQVMsRUFBRSxRQUFRO1FBQ25CLEtBQUssRUFBRSxVQUFVO0tBQ2xCLENBQUM7SUFDRixNQUFNLE1BQU0sR0FBRztRQUNiLFNBQVMsRUFBRSxVQUFVO1FBQ3JCLEtBQUssRUFBRSxtRUFBbUU7Y0FDeEUseURBQXlEO1FBQzNELEdBQUcsRUFBRSxLQUFLO1FBQ1YsUUFBUSxFQUFFO1lBQ1IsTUFBTTtZQUNOLElBQUk7WUFDSixPQUFPO1NBQ1I7S0FDRixDQUFDO0lBQ0YsTUFBTSxJQUFJLEdBQUc7UUFDWCxTQUFTLEVBQUUsVUFBVTtRQUNyQixLQUFLLEVBQUUsNENBQTRDO1FBQ25ELEdBQUcsRUFBRSxLQUFLO1FBQ1YsUUFBUSxFQUFFO1lBQ1IsTUFBTTtZQUNOLElBQUk7WUFDSixJQUFJLENBQUMsaUJBQWlCO1lBQ3RCLE9BQU87U0FDUjtLQUNGLENBQUM7SUFFRixNQUFNLFFBQVEsR0FBRztRQUNmLE9BQU87UUFDUCxLQUFLO1FBQ0wsUUFBUTtRQUNSLEtBQUs7UUFDTCxPQUFPO1FBQ1AsT0FBTztRQUNQLE1BQU07UUFDTixLQUFLO1FBQ0wsS0FBSztRQUNMLFdBQVc7UUFDWCxRQUFRO1FBQ1IsSUFBSTtRQUNKLElBQUk7UUFDSixLQUFLO1FBQ0wsUUFBUTtRQUNSLE1BQU07UUFDTixLQUFLO1FBQ0wsUUFBUTtRQUNSLFNBQVM7UUFDVCxZQUFZO1FBQ1osTUFBTTtRQUNOLEtBQUs7UUFDTCxJQUFJO1FBQ0osT0FBTztRQUNQLEtBQUs7UUFDTCxJQUFJO1FBQ0osS0FBSztRQUNMLGtCQUFrQjtRQUNsQixNQUFNO1FBQ04sS0FBSztRQUNMLFNBQVM7UUFDVCxRQUFRO1FBQ1IsUUFBUTtRQUNSLElBQUk7UUFDSixVQUFVO1FBQ1YsT0FBTztRQUNQLE1BQU07UUFDTixLQUFLO1FBQ0wsT0FBTztRQUNQLEtBQUs7UUFDTCxRQUFRO1FBQ1IsTUFBTTtRQUNOLE1BQU07UUFDTixJQUFJO1FBQ0osSUFBSTtRQUNKLElBQUk7UUFDSixhQUFhO1FBQ2IsYUFBYTtRQUNiLElBQUk7UUFDSixJQUFJO1FBQ0osWUFBWTtRQUNaLFdBQVc7UUFDWCxRQUFRO1FBQ1IsTUFBTTtRQUNOLEdBQUc7UUFDSCxHQUFHO1FBQ0gsR0FBRztRQUNILEdBQUc7UUFDSCxHQUFHO1FBQ0gsR0FBRztRQUNILFFBQVE7UUFDUixRQUFRO1FBQ1IsU0FBUztRQUNULFNBQVM7UUFDVCxNQUFNO1FBQ04sTUFBTTtRQUNOLElBQUk7UUFDSixLQUFLO0tBQ04sQ0FBQztJQUNGLE1BQU0sUUFBUSxHQUFHO1FBQ2YsSUFBSTtRQUNKLEtBQUs7UUFDTCxXQUFXO1FBQ1gsTUFBTTtRQUNOLE1BQU07UUFDTixRQUFRO1FBQ1IsU0FBUztRQUNULE9BQU87UUFDUCxNQUFNO1FBQ04sT0FBTztLQUNSLENBQUM7SUFFRixPQUFPO1FBQ0wsSUFBSSxFQUFFLElBQUk7UUFDVixRQUFRLEVBQUU7WUFDUixPQUFPLEVBQUUsUUFBUTtZQUNqQixPQUFPLEVBQUUsUUFBUTtTQUNsQjtRQUNELFFBQVEsRUFBRTtZQUNSLE1BQU07WUFDTixJQUFJO1lBQ0o7Z0JBQ0UsU0FBUyxFQUFFLFNBQVM7Z0JBQ3BCLEtBQUssRUFBRSw0QkFBNEI7YUFDcEM7WUFDRDtnQkFFRSxTQUFTLEVBQUUsU0FBUztnQkFDcEIsS0FBSyxFQUFFLCtCQUErQjthQUN2QztZQUNEO2dCQUdFLFNBQVMsRUFBRSxTQUFTO2dCQUNwQixLQUFLLEVBQUUsdURBQXVEO2FBQy9EO1lBQ0Q7Z0JBRUUsU0FBUyxFQUFFLFFBQVE7Z0JBQ25CLEtBQUssRUFBRSw0REFBNEQ7Z0JBQ25FLFNBQVMsRUFBRSxDQUFDO2FBQ2I7WUFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUM7WUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQztZQUMxQixJQUFJLENBQUMsaUJBQWlCO1lBQ3RCO2dCQUNFLFNBQVMsRUFBRSxRQUFRO2dCQUNuQixLQUFLLEVBQUUsSUFBSTtnQkFDWCxHQUFHLEVBQUUsSUFBSTthQUNWO1lBQ0QsSUFBSSxDQUFDLGFBQWE7WUFDbEI7Z0JBQ0UsU0FBUyxFQUFFLFVBQVU7Z0JBQ3JCLEtBQUssRUFBRSxrQkFBa0I7YUFDMUI7U0FDRjtLQUNGLENBQUM7QUFDSixDQUFDO0FBRUQsT0FBTyxFQUFFLEVBQUUsSUFBSSxPQUFPLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5MYW5ndWFnZTogVFBcbkF1dGhvcjogSmF5IFN0cnliaXMgPGpheS5zdHJ5YmlzQGdtYWlsLmNvbT5cbkRlc2NyaXB0aW9uOiBGQU5VQyBUUCBwcm9ncmFtbWluZyBsYW5ndWFnZSAoVFBQKS5cbiovXG5cbmZ1bmN0aW9uIHRwKGhsanMpIHtcbiAgY29uc3QgVFBJRCA9IHtcbiAgICBjbGFzc05hbWU6ICdudW1iZXInLFxuICAgIGJlZ2luOiAnWzEtOV1bMC05XSonLCAvKiBubyBsZWFkaW5nIHplcm9zICovXG4gICAgcmVsZXZhbmNlOiAwXG4gIH07XG4gIGNvbnN0IFRQTEFCRUwgPSB7XG4gICAgY2xhc3NOYW1lOiAnc3ltYm9sJyxcbiAgICBiZWdpbjogJzpbXlxcXFxdXSsnXG4gIH07XG4gIGNvbnN0IFRQREFUQSA9IHtcbiAgICBjbGFzc05hbWU6ICdidWlsdF9pbicsXG4gICAgYmVnaW46ICcoQVJ8UHxQQVlMT0FEfFBSfFJ8U1J8UlNSfExCTHxWUnxVQUxNfE1FU1NBR0V8VVRPT0x8VUZSQU1FfFRJTUVSfCdcbiAgICArICdUSU1FUl9PVkVSRkxPV3xKT0lOVF9NQVhfU1BFRUR8UkVTVU1FX1BST0d8RElBR19SRUMpXFxcXFsnLFxuICAgIGVuZDogJ1xcXFxdJyxcbiAgICBjb250YWluczogW1xuICAgICAgJ3NlbGYnLFxuICAgICAgVFBJRCxcbiAgICAgIFRQTEFCRUxcbiAgICBdXG4gIH07XG4gIGNvbnN0IFRQSU8gPSB7XG4gICAgY2xhc3NOYW1lOiAnYnVpbHRfaW4nLFxuICAgIGJlZ2luOiAnKEFJfEFPfERJfERPfEZ8Ukl8Uk98VUl8VU98R0l8R098U0l8U08pXFxcXFsnLFxuICAgIGVuZDogJ1xcXFxdJyxcbiAgICBjb250YWluczogW1xuICAgICAgJ3NlbGYnLFxuICAgICAgVFBJRCxcbiAgICAgIGhsanMuUVVPVEVfU1RSSU5HX01PREUsIC8qIGZvciBwb3Mgc2VjdGlvbiBhdCBib3R0b20gKi9cbiAgICAgIFRQTEFCRUxcbiAgICBdXG4gIH07XG5cbiAgY29uc3QgS0VZV09SRFMgPSBbXG4gICAgXCJBQk9SVFwiLFxuICAgIFwiQUNDXCIsXG4gICAgXCJBREpVU1RcIixcbiAgICBcIkFORFwiLFxuICAgIFwiQVBfTERcIixcbiAgICBcIkJSRUFLXCIsXG4gICAgXCJDQUxMXCIsXG4gICAgXCJDTlRcIixcbiAgICBcIkNPTFwiLFxuICAgIFwiQ09ORElUSU9OXCIsXG4gICAgXCJDT05GSUdcIixcbiAgICBcIkRBXCIsXG4gICAgXCJEQlwiLFxuICAgIFwiRElWXCIsXG4gICAgXCJERVRFQ1RcIixcbiAgICBcIkVMU0VcIixcbiAgICBcIkVORFwiLFxuICAgIFwiRU5ERk9SXCIsXG4gICAgXCJFUlJfTlVNXCIsXG4gICAgXCJFUlJPUl9QUk9HXCIsXG4gICAgXCJGSU5FXCIsXG4gICAgXCJGT1JcIixcbiAgICBcIkdQXCIsXG4gICAgXCJHVUFSRFwiLFxuICAgIFwiSU5DXCIsXG4gICAgXCJJRlwiLFxuICAgIFwiSk1QXCIsXG4gICAgXCJMSU5FQVJfTUFYX1NQRUVEXCIsXG4gICAgXCJMT0NLXCIsXG4gICAgXCJNT0RcIixcbiAgICBcIk1PTklUT1JcIixcbiAgICBcIk9GRlNFVFwiLFxuICAgIFwiT2Zmc2V0XCIsXG4gICAgXCJPUlwiLFxuICAgIFwiT1ZFUlJJREVcIixcbiAgICBcIlBBVVNFXCIsXG4gICAgXCJQUkVHXCIsXG4gICAgXCJQVEhcIixcbiAgICBcIlJUX0xEXCIsXG4gICAgXCJSVU5cIixcbiAgICBcIlNFTEVDVFwiLFxuICAgIFwiU0tJUFwiLFxuICAgIFwiU2tpcFwiLFxuICAgIFwiVEFcIixcbiAgICBcIlRCXCIsXG4gICAgXCJUT1wiLFxuICAgIFwiVE9PTF9PRkZTRVRcIixcbiAgICBcIlRvb2xfT2Zmc2V0XCIsXG4gICAgXCJVRlwiLFxuICAgIFwiVVRcIixcbiAgICBcIlVGUkFNRV9OVU1cIixcbiAgICBcIlVUT09MX05VTVwiLFxuICAgIFwiVU5MT0NLXCIsXG4gICAgXCJXQUlUXCIsXG4gICAgXCJYXCIsXG4gICAgXCJZXCIsXG4gICAgXCJaXCIsXG4gICAgXCJXXCIsXG4gICAgXCJQXCIsXG4gICAgXCJSXCIsXG4gICAgXCJTVFJMRU5cIixcbiAgICBcIlNVQlNUUlwiLFxuICAgIFwiRklORFNUUlwiLFxuICAgIFwiVk9GRlNFVFwiLFxuICAgIFwiUFJPR1wiLFxuICAgIFwiQVRUUlwiLFxuICAgIFwiTU5cIixcbiAgICBcIlBPU1wiXG4gIF07XG4gIGNvbnN0IExJVEVSQUxTID0gW1xuICAgIFwiT05cIixcbiAgICBcIk9GRlwiLFxuICAgIFwibWF4X3NwZWVkXCIsXG4gICAgXCJMUE9TXCIsXG4gICAgXCJKUE9TXCIsXG4gICAgXCJFTkFCTEVcIixcbiAgICBcIkRJU0FCTEVcIixcbiAgICBcIlNUQVJUXCIsXG4gICAgXCJTVE9QXCIsXG4gICAgXCJSRVNFVFwiXG4gIF07XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnVFAnLFxuICAgIGtleXdvcmRzOiB7XG4gICAgICBrZXl3b3JkOiBLRVlXT1JEUyxcbiAgICAgIGxpdGVyYWw6IExJVEVSQUxTXG4gICAgfSxcbiAgICBjb250YWluczogW1xuICAgICAgVFBEQVRBLFxuICAgICAgVFBJTyxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiAna2V5d29yZCcsXG4gICAgICAgIGJlZ2luOiAnLyhQUk9HfEFUVFJ8TU58UE9TfEVORClcXFxcYidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8qIHRoaXMgaXMgZm9yIGNhc2VzIGxpa2UgLENBTEwgKi9cbiAgICAgICAgY2xhc3NOYW1lOiAna2V5d29yZCcsXG4gICAgICAgIGJlZ2luOiAnKENBTEx8UlVOfFBPSU5UX0xPR0lDfExCTClcXFxcYidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8qIHRoaXMgaXMgZm9yIGNhc2VzIGxpa2UgQ05UMTAwIHdoZXJlIHRoZSBkZWZhdWx0IGxleGVtZXMgZG8gbm90XG4gICAgICAgICAqIHNlcGFyYXRlIHRoZSBrZXl3b3JkIGFuZCB0aGUgbnVtYmVyICovXG4gICAgICAgIGNsYXNzTmFtZTogJ2tleXdvcmQnLFxuICAgICAgICBiZWdpbjogJ1xcXFxiKEFDQ3xDTlR8U2tpcHxPZmZzZXR8UFNQRHxSVF9MRHxBUF9MRHxUb29sX09mZnNldCknXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvKiB0byBjYXRjaCBudW1iZXJzIHRoYXQgZG8gbm90IGhhdmUgYSB3b3JkIGJvdW5kYXJ5IG9uIHRoZSBsZWZ0ICovXG4gICAgICAgIGNsYXNzTmFtZTogJ251bWJlcicsXG4gICAgICAgIGJlZ2luOiAnXFxcXGQrKHNlY3xtc2VjfG1tL3NlY3xjbS9taW58aW5jaC9taW58ZGVnL3NlY3xtbXxpbnxjbSk/XFxcXGInLFxuICAgICAgICByZWxldmFuY2U6IDBcbiAgICAgIH0sXG4gICAgICBobGpzLkNPTU1FTlQoJy8vJywgJ1s7JF0nKSxcbiAgICAgIGhsanMuQ09NTUVOVCgnIScsICdbOyRdJyksXG4gICAgICBobGpzLkNPTU1FTlQoJy0tZWc6JywgJyQnKSxcbiAgICAgIGhsanMuUVVPVEVfU1RSSU5HX01PREUsXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogJ3N0cmluZycsXG4gICAgICAgIGJlZ2luOiAnXFwnJyxcbiAgICAgICAgZW5kOiAnXFwnJ1xuICAgICAgfSxcbiAgICAgIGhsanMuQ19OVU1CRVJfTU9ERSxcbiAgICAgIHtcbiAgICAgICAgY2xhc3NOYW1lOiAndmFyaWFibGUnLFxuICAgICAgICBiZWdpbjogJ1xcXFwkW0EtWmEtejAtOV9dKydcbiAgICAgIH1cbiAgICBdXG4gIH07XG59XG5cbmV4cG9ydCB7IHRwIGFzIGRlZmF1bHQgfTtcbiJdfQ==