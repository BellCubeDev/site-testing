function taggerscript(hljs) {
    const NOOP = {
        className: 'comment',
        begin: /\$noop\(/,
        end: /\)/,
        contains: [
            { begin: /\\[()]/ },
            {
                begin: /\(/,
                end: /\)/,
                contains: [
                    { begin: /\\[()]/ },
                    'self'
                ]
            }
        ],
        relevance: 10
    };
    const FUNCTION = {
        className: 'keyword',
        begin: /\$[_a-zA-Z0-9]+(?=\()/
    };
    const VARIABLE = {
        className: 'variable',
        begin: /%[_a-zA-Z0-9:]+%/
    };
    const ESCAPE_SEQUENCE_UNICODE = {
        className: 'symbol',
        begin: /\\u[a-fA-F0-9]{4}/
    };
    const ESCAPE_SEQUENCE = {
        className: 'symbol',
        begin: /\\[\\nt$%,()]/
    };
    return {
        name: 'Tagger Script',
        contains: [
            NOOP,
            FUNCTION,
            VARIABLE,
            ESCAPE_SEQUENCE,
            ESCAPE_SEQUENCE_UNICODE
        ]
    };
}
export { taggerscript as default };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnZ2Vyc2NyaXB0LmpzIiwic291cmNlUm9vdCI6Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9CZWxsQ3ViZURldi9zaXRlLXRlc3RpbmcvZGVwbG95bWVudC8iLCJzb3VyY2VzIjpbImFzc2V0cy9zaXRlL2hpZ2hsaWdodF9qcy9sYW5ndWFnZXMvdGFnZ2Vyc2NyaXB0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLFNBQVMsWUFBWSxDQUFDLElBQUk7SUFDeEIsTUFBTSxJQUFJLEdBQUc7UUFDWCxTQUFTLEVBQUUsU0FBUztRQUNwQixLQUFLLEVBQUUsVUFBVTtRQUNqQixHQUFHLEVBQUUsSUFBSTtRQUNULFFBQVEsRUFBRTtZQUNSLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUNuQjtnQkFDRSxLQUFLLEVBQUUsSUFBSTtnQkFDWCxHQUFHLEVBQUUsSUFBSTtnQkFDVCxRQUFRLEVBQUU7b0JBQ1IsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFO29CQUNuQixNQUFNO2lCQUNQO2FBQ0Y7U0FDRjtRQUNELFNBQVMsRUFBRSxFQUFFO0tBQ2QsQ0FBQztJQUVGLE1BQU0sUUFBUSxHQUFHO1FBQ2YsU0FBUyxFQUFFLFNBQVM7UUFDcEIsS0FBSyxFQUFFLHVCQUF1QjtLQUMvQixDQUFDO0lBRUYsTUFBTSxRQUFRLEdBQUc7UUFDZixTQUFTLEVBQUUsVUFBVTtRQUNyQixLQUFLLEVBQUUsa0JBQWtCO0tBQzFCLENBQUM7SUFFRixNQUFNLHVCQUF1QixHQUFHO1FBQzlCLFNBQVMsRUFBRSxRQUFRO1FBQ25CLEtBQUssRUFBRSxtQkFBbUI7S0FDM0IsQ0FBQztJQUVGLE1BQU0sZUFBZSxHQUFHO1FBQ3RCLFNBQVMsRUFBRSxRQUFRO1FBQ25CLEtBQUssRUFBRSxlQUFlO0tBQ3ZCLENBQUM7SUFFRixPQUFPO1FBQ0wsSUFBSSxFQUFFLGVBQWU7UUFDckIsUUFBUSxFQUFFO1lBQ1IsSUFBSTtZQUNKLFFBQVE7WUFDUixRQUFRO1lBQ1IsZUFBZTtZQUNmLHVCQUF1QjtTQUN4QjtLQUNGLENBQUM7QUFDSixDQUFDO0FBRUQsT0FBTyxFQUFFLFlBQVksSUFBSSxPQUFPLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5MYW5ndWFnZTogVGFnZ2VyIFNjcmlwdFxuQXV0aG9yOiBQaGlsaXBwIFdvbGZlciA8cGgud29sZmVyQGdtYWlsLmNvbT5cbkRlc2NyaXB0aW9uOiBTeW50YXggSGlnaGxpZ2h0aW5nIGZvciB0aGUgVGFnZ2VyIFNjcmlwdCBhcyB1c2VkIGJ5IE11c2ljQnJhaW56IFBpY2FyZC5cbldlYnNpdGU6IGh0dHBzOi8vcGljYXJkLm11c2ljYnJhaW56Lm9yZ1xuICovXG5mdW5jdGlvbiB0YWdnZXJzY3JpcHQoaGxqcykge1xuICBjb25zdCBOT09QID0ge1xuICAgIGNsYXNzTmFtZTogJ2NvbW1lbnQnLFxuICAgIGJlZ2luOiAvXFwkbm9vcFxcKC8sXG4gICAgZW5kOiAvXFwpLyxcbiAgICBjb250YWluczogW1xuICAgICAgeyBiZWdpbjogL1xcXFxbKCldLyB9LFxuICAgICAge1xuICAgICAgICBiZWdpbjogL1xcKC8sXG4gICAgICAgIGVuZDogL1xcKS8sXG4gICAgICAgIGNvbnRhaW5zOiBbXG4gICAgICAgICAgeyBiZWdpbjogL1xcXFxbKCldLyB9LFxuICAgICAgICAgICdzZWxmJ1xuICAgICAgICBdXG4gICAgICB9XG4gICAgXSxcbiAgICByZWxldmFuY2U6IDEwXG4gIH07XG5cbiAgY29uc3QgRlVOQ1RJT04gPSB7XG4gICAgY2xhc3NOYW1lOiAna2V5d29yZCcsXG4gICAgYmVnaW46IC9cXCRbX2EtekEtWjAtOV0rKD89XFwoKS9cbiAgfTtcblxuICBjb25zdCBWQVJJQUJMRSA9IHtcbiAgICBjbGFzc05hbWU6ICd2YXJpYWJsZScsXG4gICAgYmVnaW46IC8lW19hLXpBLVowLTk6XSslL1xuICB9O1xuXG4gIGNvbnN0IEVTQ0FQRV9TRVFVRU5DRV9VTklDT0RFID0ge1xuICAgIGNsYXNzTmFtZTogJ3N5bWJvbCcsXG4gICAgYmVnaW46IC9cXFxcdVthLWZBLUYwLTldezR9L1xuICB9O1xuXG4gIGNvbnN0IEVTQ0FQRV9TRVFVRU5DRSA9IHtcbiAgICBjbGFzc05hbWU6ICdzeW1ib2wnLFxuICAgIGJlZ2luOiAvXFxcXFtcXFxcbnQkJSwoKV0vXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnVGFnZ2VyIFNjcmlwdCcsXG4gICAgY29udGFpbnM6IFtcbiAgICAgIE5PT1AsXG4gICAgICBGVU5DVElPTixcbiAgICAgIFZBUklBQkxFLFxuICAgICAgRVNDQVBFX1NFUVVFTkNFLFxuICAgICAgRVNDQVBFX1NFUVVFTkNFX1VOSUNPREVcbiAgICBdXG4gIH07XG59XG5cbmV4cG9ydCB7IHRhZ2dlcnNjcmlwdCBhcyBkZWZhdWx0IH07XG4iXX0=