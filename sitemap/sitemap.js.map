{"version":3,"file":"sitemap.ts","names":["componentHandler","cssSummary_","window","bcd_init_functions","sitemap","async","data","fetch","location","href","obj","json","console","debug","sitemapContainer","document","getElementById","prefabParent","prefabItem","content","prefabDir","sortedPages","pages","filter","page","layout","map","path","split","sort","a","b","aPath","bPath","lastA","lastB","pop","length","aDir","bDir","shift","localeCompare","name","JSON","stringify","lastDir","dir","findOrCreateDir","item","cloneNode","removeAttribute","querySelector","tempTextCont","formatted_title","title","trim","translation","textContent","setAttribute","url","appendPoint","appendChild","querySelectorAll","forEach","d","classList","remove","add","s","setTimeout","upgradeElements","bind","undefined","elementsToUpgrade","entryPoint","existingDir","id","parentElement","newDir","thisSummary","thisName","existingItems","insertBefore","push","children"],"sourceRoot":"https://raw.githubusercontent.com/BellCubeDev/site-testing/deployment/","sources":["https://raw.githubusercontent.com/BellCubeDev/site-testing/deployment/sitemap/sitemap.ts"],"sourcesContent":["import {componentHandler} from '../assets/site/mdl/material.js';\n\nconst cssDetails_ = 'js-bcd-details_';\nconst cssSummary_ = 'js-bcd-summary_';\n\ninterface jekyllPages {\n    pages: Array<{\n        content: string;\n        dir: string;\n        name: string;\n        path: string;\n        url: string;\n        [key: string]: string|boolean|undefined;\n        layout?: string;\n        permalink?: string;\n        sitemap?: boolean;\n        formatted_title?: string;\n        title?: string;\n    }>,\n    translation: Record<string, string>;\n}\n\nwindow.bcd_init_functions.sitemap = sitemapInit;\n\n\nconst elementsToUpgrade:HTMLElement[] = [];\n\n\n/** Prefabricated template for a single sitemap entry\n    ```html\n        <li id=\"prefab-sitemap-item\">\n            <a class=\"sitemap-item\" href=\"\" class=\"\">TITLE</a>\n        </li>\n    ```\n*/\nlet prefabItem:HTMLDivElement;\n\n/** Prefabricated template for a directory in the sitemap\n    ```html\n        <div id=\"prefab-sitemap-dir\" class=\"sitemap-dir\">\n            <button class=\"cssSummary_ adjacent is-open\" type=\"button\">\n                <i class=\"material-icons open-icon-90CC\">expand_more</i>\n                <h3 class=\"sitemap-dir-name\">DIRECTORY</h3>\n            </button>\n\n            <div class=\"cssDetails_ adjacent is-open\"><ul class=\"sitemap-dir-items\">\n            </ul></div>\n        </div>\n    ```\n*/\nlet prefabDir:HTMLDivElement;\n\nlet prefabParent:HTMLTemplateElement;\n\nlet obj:jekyllPages;\n\nasync function sitemapInit(){\n\n    const data = await fetch(`${window.location.href}sitemap.json`);\n    obj = await data.json() as jekyllPages;\n\n    console.debug('Working with object:\\n', obj);\n\n    const sitemapContainer = document.getElementById('sitemap') as HTMLDivElement;\n\n    prefabParent = document.getElementById('prefabs') as HTMLTemplateElement;\n\n    prefabItem = prefabParent.content.getElementById('prefab-sitemap-item') as HTMLDivElement;\n    prefabDir = prefabParent.content.getElementById('prefab-sitemap-dir') as HTMLDivElement;\n\n    const filteredPages = obj.pages.filter(page => page.layout && page.layout !== 'compress_html' && page.sitemap !== false);\n\n    const splitPagePaths = filteredPages.map(page => {\n        return {\n            ...page,\n            path: page.path.split('/')\n        };\n    });\n\n    // Sort pages by path - folders should be before files and sorted alphabetically\n\n    const sortedPages = splitPagePaths.sort((a, b) => {\n        const [aPath, bPath] = [[...a.path], [...b.path]];\n        const [lastA, lastB] = [aPath.pop()!, bPath.pop()!];\n\n        while (aPath.length || bPath.length) {\n            const [aDir, bDir] = [aPath.shift()!, bPath.shift()!];\n\n            if (aDir === bDir) continue;\n\n            if (!aDir) return 1;\n            if (!bDir) return -1;\n\n            if (aDir !== bDir) return aDir.localeCompare(bDir);\n        }\n\n        if (lastA === lastB) return 0;\n        else return lastA.localeCompare(lastB) ? 1 : -1;\n    });\n\n    for (const page of sortedPages) {\n        page.path.pop(); // Remove filename\n\n        console.debug('======================================================');\n        console.debug('Current file:', page.name);\n        console.debug('Working with path:\\n', JSON.stringify(page.path));\n\n        // Navigate down the tree to the correct directory\n        let lastDir:HTMLDivElement|null = sitemapContainer;\n        for (const dir of page.path) {\n            lastDir = findOrCreateDir(dir, lastDir);\n            console.debug('Dir', lastDir);\n        }\n\n        const item = prefabItem.cloneNode(true) as HTMLDivElement;\n        item.removeAttribute('id');\n\n        const a = item.querySelector('.sitemap-item') as HTMLAnchorElement;\n\n        const tempTextCont = (page.formatted_title ?? page.title ?? page.name).trim();\n        if (tempTextCont in obj.translation) a.textContent = obj.translation[tempTextCont]!;\n        else a.textContent = tempTextCont;\n\n        a.setAttribute('href', page.url);\n\n\n        console.debug('Directory to append within:', lastDir);\n        const appendPoint = lastDir.querySelector(':scope > .js-bcd-details_ > .sitemap-dir-items') ?? lastDir;\n\n        console.debug('Adding item', item, 'to', lastDir);\n        console.debug('Appending to...', appendPoint);\n\n        appendPoint.appendChild(item);\n\n        lastDir = null;\n        console.debug('======================================================');\n    }\n\n    const tempDetails = sitemapContainer.querySelectorAll(`.${cssDetails_}`);\n    tempDetails.forEach(d => {\n        d.classList.remove('js-bcd-details_');\n        d?.classList.add('js-bcd-details');\n    });\n\n    const tempSummaries = sitemapContainer.querySelectorAll(`.${cssSummary_}`);\n    tempSummaries.forEach(s => {\n        s.classList.remove(cssSummary_);\n        s.classList.add('js-bcd-summary');\n    });\n\n    setTimeout((componentHandler.upgradeElements as Function).bind(undefined, elementsToUpgrade));\n}\n\nfunction findOrCreateDir(dir:string, entryPoint:Element):HTMLDivElement{\n    console.debug('Looking for dir', dir);\n\n    const existingDir = entryPoint.querySelector(entryPoint.id === 'sitemap' ?\n              `:scope                    > .sitemap-dir > .js-bcd-summary_ > .sitemap-dir-name[data-dir=\"${dir}\"]`\n            : `:scope > .js-bcd-details_ > .sitemap-dir > .js-bcd-summary_ > .sitemap-dir-name[data-dir=\"${dir}\"]`\n    )?.parentElement!.parentElement as HTMLDivElement;\n\n\n    console.debug('Existing dir:', existingDir);\n    if (existingDir) return existingDir;\n\n    console.debug('Creating new dir:', dir);\n\n    const newDir = prefabDir.cloneNode(true) as HTMLDivElement;\n    newDir.removeAttribute('id');\n\n    const thisSummary = newDir.querySelector(':scope > .js-bcd-summary_')!;\n\n    let tempTextCont = dir.trim();\n    if (tempTextCont in obj.translation) tempTextCont = obj.translation[tempTextCont]!;\n\n    const thisName = thisSummary.querySelector(':scope > .sitemap-dir-name') as HTMLHeadingElement;\n    thisName.textContent = tempTextCont;\n    thisName.setAttribute('data-dir', dir);\n\n    const appendPoint = entryPoint.querySelector(':scope > .js-bcd-details_') ?? entryPoint;\n\n    const existingItems = appendPoint.querySelector(':scope > .sitemap-dir-items');\n    if (existingItems)  appendPoint.insertBefore(newDir, existingItems);\n    else                appendPoint.appendChild(newDir);\n\n    elementsToUpgrade.push(...newDir.children as HTMLCollectionOf<HTMLElement>);\n\n    return newDir;\n}\n"],"mappings":"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"}