# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
name: Build & Deploy Site
on: # Run when the `main` branch is pushed to or when manually requested
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/github-pages-build-and-deploy.yml'
      - 'site/**'
  workflow_dispatch:




jobs:
  build:
    name: "Build Site"
    runs-on: ubuntu-latest
    steps:

      # Cancel Outdated Workflow Runs
      - uses: styfle/cancel-workflow-action
        with:
          all_but_latest: true



      # Setup Work
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true



      - name: Install Ruby & Gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Install NPM
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'



      - name: Install Node.js Package & Ruby Gem Dependencies
        # Output dir: [N/A]
        run: |
          # Command used for debugging purposes only
          # ls $GITHUB_WORKSPACE/**/*

          cd $GITHUB_WORKSPACE/site/
          npm install --omit=dev
          bundle install

          # Some minifiers
          npm install minify-all-js --location=global
          npm install html-minifier-terser --location=global



      - name: Compile Typescript
        # Output dir: $GITHUB_WORKSPACE/_generated/ts_out/
        run: |
          mkdir $GITHUB_WORKSPACE/_generated/
          mkdir $GITHUB_WORKSPACE/_generated/ts_out/
          cd $GITHUB_WORKSPACE/site/
          npx tsc --build --verbose tsconfig.json



      - name: Move Files to ts_out
        # Move everything else to the correct folder, except JavaScript and TypesScript files (since they were compiled/copied above)

        # Output dir: $GITHUB_WORKSPACE/_generated/ts_out/
        run: |
          cd $GITHUB_WORKSPACE/site/src/
          rm -f -r *.js

          rsync -t -r -v $GITHUB_WORKSPACE/site/src/* $GITHUB_WORKSPACE/_generated/ts_out/

      - name: Set Minification Directory
        run: |
          echo "minifyDir=$GITHUB_WORKSPACE/_generated/ts_out/" >> $GITHUB_ENV
          echo "doDebug=true" >> $GITHUB_ENV

      - name: Minify JavaScript and CSS
        # Output dir: [in-place] $GITHUB_WORKSPACE/_generated/ts_out/
        run: |
          cd $GITHUB_WORKSPACE/site
          echo Minification Directory: $minifyDir
          echo Debug: $doDebug
          node minify.mjs



      - name: Build with Jekyll
        # Output dir: $GITHUB_WORKSPACE/_generated/_jekyll-out/
        run: |
          cd $GITHUB_WORKSPACE/site/
          mkdir $GITHUB_WORKSPACE/_generated/_jekyll-out/
          bundle exec jekyll build --config $GITHUB_WORKSPACE/site/_config.yml --source $GITHUB_WORKSPACE/_generated/ts_out/ --destination $GITHUB_WORKSPACE/_generated/_jekyll-out/ --verbose --safe --trace


      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ github.workspace }}/_generated/_jekyll-out/



  deploy:
    name: "Deploy to GitHub Pages"
    runs-on: ubuntu-latest
    needs:
       - build

    permissions:
      pages: write
      id-token: write

    environment:
      name: GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1




  deploy_branch:
    name: "Deploy to Visibility Branch"
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
      id-token: write
      pages: write

    environment:
      name: Visibility Branch
      url: https://github.com/${{ github.repository }}/tree/deployment

    steps:
      - name: Download Artifact
        uses: alehechka/download-tartifact@v1
        with:
          name: github-pages
          path: artifacts/github-pages

      - name: Deploy to Visibility Branch
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: deployment
          build_dir: artifacts/github-pages
          jekyll: false
          verbose: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  send_discord_message:
    name: "Send Discord Message"
    runs-on: ubuntu-latest

    needs:
      - deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install NPM
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install NPM Packages
        run: |
          cd $GITHUB_WORKSPACE/site/
          npm install --omit=dev

      - name: Send Discord Message
        run: |
          cd $GITHUB_WORKSPACE/site/
          node send-discord-update.mjs
        env:
          githubENV: ${{ toJSON(github) }}
          webhookToken: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          webhookID: ${{ secrets.DISCORD_WEBHOOK_ID }}
          threadID: ${{ secrets.DISCORD_THREAD_ID }}
