# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
name: Build & Deploy Site
on: # Run when the `main` branch is pushed to or when manually requested
  push:
    branches: [ "main" ]
  workflow_dispatch:




jobs:
  build:
    name: "Build Site"
    runs-on: ubuntu-latest
    steps:



      # Setup Work
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true



      - name: Install Ruby & Gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          #bundler-cache: true # Should be equivalent to `bundle install' (but faster), though it does not expose executables directly. Meh, that's what `bundle exec` is for!
          # ^ Was causing an issue with my good friend TypeScript when given a working directory and not working when not given a working directory.



      - name: Install NPM
        uses: actions/setup-node@v3.3.0



      - name: Install Node.js Package & Ruby Gem Dependencies
        # Output dir: [N/A]
        run: |
          # Command used for debugging purposes only
          # ls $GITHUB_WORKSPACE/**/*

          cd $GITHUB_WORKSPACE/site/
          npm install --omit=dev
          bundle install

          # Some minifiers
          npm install minify-all-js --location=global
          npm install html-minifier-terser --location=global



      - name: Compile Typescript
        # Output dir: $GITHUB_WORKSPACE/_generated/ts_out/
        run: |
          mkdir $GITHUB_WORKSPACE/_generated/
          mkdir $GITHUB_WORKSPACE/_generated/ts_out/
          cd $GITHUB_WORKSPACE/site/
          npx tsc --build --verbose tsconfig.json



      - name: Move Files to ts_out
        # Move everything else to the correct folder, except JavaScript and TypesScript files (since they were compiled/copied above)

        # Output dir: $GITHUB_WORKSPACE/_generated/ts_out/
        run: |
          cd $GITHUB_WORKSPACE/site/src/
          rm -f -r *.ts *.js

          rsync -t -r -v $GITHUB_WORKSPACE/site/src/* $GITHUB_WORKSPACE/_generated/ts_out/



      - name: Minify JavaScript and JSON
        # Output dir: [in-place] $GITHUB_WORKSPACE/_generated/ts_out/
        run: |
          echo "$GITHUB_WORKSPACE/_generated/ts_out/" >> $minifyDir
          cd $GITHUB_WORKSPACE/site
          node minify.mjs



      - name: Build with Jekyll
        # Output dir: $GITHUB_WORKSPACE/_generated/_jekyll-out/
        run: |
          cd $GITHUB_WORKSPACE/site/
          # Debug command
          #echo -e "\n\n===========================================\n BEGIN Debug command - printenv\n===========================================\n\n"
          #printenv
          #echo -e "\n\n===========================================\n  END  Debug command - printenv\n===========================================\n\n"

          mkdir $GITHUB_WORKSPACE/_generated/_jekyll-out/
          # Debug command
          #echo -e "\n\n===========================================\n           BEGIN Debug command - ls\n===========================================\n\n"
          #ls -R $GITHUB_WORKSPACE/_generated/ts_out/
          #echo -e "\n\n===========================================\n            END  Debug command - ls\n===========================================\n\n"
          bundle exec jekyll build --config $GITHUB_WORKSPACE/site/_config.yml --source $GITHUB_WORKSPACE/_generated/ts_out/ --destination $GITHUB_WORKSPACE/_generated/_jekyll-out/ --verbose --safe --trace



#      - name: Minify HTML (etc.)
#        # Output dir: $GITHUB_WORKSPACE/_generated/_minify-HTML-out/
#        run: |
#          cd $GITHUB_WORKSPACE/_generated/
#
#          # HTML
#          html-minifier-terser --collapse-boolean-attributes --collapse-whitespace --conservative-collapse --decode-entities --minify-urls true --no-newlines-before-tag-close --process-conditional-comments --quote-character " --remove-attribute-quotes --remove-comments --remove-redundant-attributes --remove-script-type-attributes --remove-style-link-type-attributes --sort-attributes --sort-class-name \
#              --input-dir _jekyll-out --output-dir _minify-HTML-out --file-ext html
#
#          # SVGs
#          html-minifier-terser --case-sensitive --collapse-boolean-attributes --collapse-whitespace --conservative-collapse --decode-entities --minify-urls true --no-newlines-before-tag-close --process-conditional-comments --quote-character " --remove-attribute-quotes --remove-comments --remove-redundant-attributes --remove-script-type-attributes --remove-style-link-type-attributes --sort-attributes --sort-class-name \
#              --input-dir _jekyll-out --output-dir _minify-HTML-out --file-ext svg
#
#          # XML
#          html-minifier-terser --case-sensitive --collapse-boolean-attributes --collapse-whitespace --conservative-collapse --decode-entities --minify-urls true --no-newlines-before-tag-close --process-conditional-comments --quote-character " --remove-attribute-quotes --remove-comments --remove-redundant-attributes --remove-script-type-attributes --remove-style-link-type-attributes --sort-attributes --sort-class-name \
#              --input-dir _jekyll-out --output-dir _minify-HTML-out --file-ext xml
#
#          # Move Everything Else
#          rm -f $GITHUB_WORKSPACE/_generated/_jekyll-out/**/*.html
#          rm -f $GITHUB_WORKSPACE/_generated/_jekyll-out/**/*.svg
#          rm -f $GITHUB_WORKSPACE/_generated/_jekyll-out/**/*.xml
#          mv -n $GITHUB_WORKSPACE/_generated/_jekyll-out/* $GITHUB_WORKSPACE/_generated/_minify-HTML-out/


      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v1
        with:
#          path: $GITHUB_WORKSPACE/_generated/_minify-HTML-out/
          path: ${{ github.workspace }}/_generated/_jekyll-out/



  deploy:
    name: "Deploy to GitHub Pages"
    runs-on: ubuntu-latest
    needs:
       - build

    permissions:
      pages: write
      id-token: write

    environment:
      name: GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1



  deploy_branch:
    name: "Deploy to Visibility Branch"
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
      id-token: write
      pages: write

    environment:
      name: Visibility Branch
      url: https://github.com/${{ github.repository }}/tree/deployment

    steps:
      - name: Download Artifact
        uses: alehechka/download-tartifact@v1
        with:
          name: github-pages
          path: artifacts/github-pages

      - name: Deploy to Visibility Branch
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: deployment
          build_dir: artifacts/github-pages
          jekyll: false
          verbose: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
