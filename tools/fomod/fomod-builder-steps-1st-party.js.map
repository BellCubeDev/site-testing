{"version":3,"file":"fomod-builder-steps-1st-party.ts","names":["mainClasses","mainUI","anAnimationFrame","registerUpgrade","BCDDropdown","registerForEvents","unregisterForEvents","UpdatableObject","BCDSummary","updatePluralDisplay","componentHandler","Sortable_","Sortable","sortableSettings","ghostClass","chosenClass","selectedClass","dragClass","fallbackClass","handle","dataIdAttr","animation","bubbleScroll","scroll","document","body","querySelector","scrollSensitivity","scrollSpeed","delay","delayOnTouchOnly","direction","sort","multiDrag","sortableSettings_steps","group","draggable","sortableSettings_groups","sortableSettings_options","sortableSettings_flags","CardBase","main","deleteButton","dragHandle","sortable","async","Promise","all","this","updateDeleteButton","updateSortingHandler","update_","updateCard","minimumItemsToSort","minimumChildrenToSort","forceState","parentGroup","size","style","opacity","ariaDisabled","disabled","setAttribute","pointerEvents","tabIndex","children","option","undefined","childrenContainer","classList","remove","add","onSort","event","added","childClass","from","to","console","debug","newIndex","oldIndex","displayItem","item","upgrades","get","error","moveIndex","parent","update","onSort_bound","bind","onAdd","inherited","updateWhole","onAdd_bound","onRemove","delete","onRemove_bound","previousElemStyle","previousSibling","zIndex","summary","close","getComputedStyle","animationName","addEventListener","once","animateIn","container","lastElementChild","HTMLElement","finalize","removeEventListener","deleteButtonTemplate","getElementById","content","firstElementChild","dragHandleTemplate","Fomod","Step","steps","stepContainers","nameInput","name","moduleName","value","imageInput","image","metaImage","sortOrderMenu","sortOrder","sortingOrder","addStepBtn","changeEvtObj","dropdownEvtObj","addStepEvtObj","constructor","super","change","updateFromInput_bound","dropdownInput","activate","addStep_bound","stepsContainer","sortableEvents","Object","assign","updateFromInput_","dropdownObj","getExtends","translateDropdown","selectedOption","dispatchEvent","Event","selectByString","window","FOMODBuilder","storage","settings","defaultSortingOrder","addUpdateObjects","stepTemplate","Group","groups","groupContainers","nameDisplay","groupCountDisplay","optionCountDisplay","addGroupBtn","cloneNode","groupsContainer","addGroup_bound","insertBefore","destroy","stepContainer","containers","appendChild","upgradeElements","warn","textContent","reduce","currentCount","options","groupTemplate","Option","optionContainers","selectionType","type","selectionTypeMenu","addOptionBtn","optionsContainer","addOption_bound","groupContainer","dropdownObj2","optionTemplate","DependencyFlag","flagsToSet","flagsContainers","fileCountDisplay","flagCountDisplay","description","descriptionInput","editStateConditionsButton","defaultState","typeDescriptor","defaultStateDropdown","addFlagBtn","addFlagEvtObj","addFlag_bound","flagsContainer","optionContainer","files","dependencyFlagTemplate","flag","valueInput","flagContainer"],"sourceRoot":"https://raw.githubusercontent.com/BellCubeDev/site-testing/deployment/","sources":["https://raw.githubusercontent.com/BellCubeDev/site-testing/deployment/tools/fomod/fomod-builder-steps-1st-party.ts"],"sourcesContent":["/** fomod-builder-steps files contains code for the FOMOD Builder steps page.\n    This file in particular contains code for the 1st-party FOMOD Builder steps builder.\n\n    Other fomod-builder-steps files provide code for their respective builders.\n\n    @author BellCube Dev\n    @namespace - fomod-builder-steps\n */\n\nimport * as mainClasses from './fomod-builder-classifications.js';\nimport * as mainUI from './fomod-builder-ui.js';\nimport { anAnimationFrame, registerUpgrade, BCDDropdown, registerForEvents, unregisterForEvents, UpdatableObject, BCDSummary, animationFrames } from '../../universal.js';\nimport { updatePluralDisplay } from './fomod-builder-ui.js';\nimport { componentHandler } from '../../assets/site/mdl/material.js';\n\nimport Sortable_ from '../../included_node_modules/sortablejs/modular/sortable.esm.js';\nimport type Sortable__ from '../../../node_modules/@types/sortablejs/index';\n\n// https://www.npmjs.com/package/sortablejs\nconst Sortable = Sortable_ as unknown as typeof Sortable__;\n\nexport const sortableSettings = {\n\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    selectedClass: 'sortable-selected',\n    dragClass: 'sortable-drag',\n    fallbackClass: 'sortable-fallback',\n\n    handle: '.builder-steps-drag-handle',\n\n    dataIdAttr: 'data-id',\n\n    animation: 250,\n\n    bubbleScroll: true,\n    scroll: document.body.querySelector('main')!,\n    scrollSensitivity: 128, // in pixels\n    scrollSpeed: 64, // in pixels\n\n    delay: 200,\n    delayOnTouchOnly: true,\n\n    direction: 'vertical',\n    sort: true,\n\n    multiDrag: true,\n} as const satisfies Sortable__.Options;\n\nexport const sortableSettings_steps = {\n    ...sortableSettings,\n\n    group: 'steps',\n    draggable: '.builder-steps-step',\n} as const satisfies Sortable__.Options;\n\nexport const sortableSettings_groups = {\n    ...sortableSettings,\n\n    group: 'groups',\n    draggable: '.builder-steps-group',\n} as const satisfies Sortable__.Options;\n\nexport const sortableSettings_options = {\n    ...sortableSettings,\n\n    group: 'options',\n    draggable: '.builder-steps-option',\n} as const satisfies Sortable__.Options;\n\nexport const sortableSettings_flags = {\n    ...sortableSettings,\n\n    group: 'flags',\n    draggable: '.builder-steps-option-flag',\n} as const satisfies Sortable__.Options;\n\nabstract class CardBase extends UpdatableObject {\n    abstract parent?: mainClasses.DependencyFlag|mainClasses.Option|mainClasses.Group|mainClasses.Step|mainClasses.Fomod;\n    abstract parentGroup?: Set<NonNullable<CardBase['parent']>>;\n\n    abstract children: Set<mainClasses.FOMODElementProxy>|undefined;\n    abstract childrenContainer: HTMLDivElement|undefined;\n    abstract childClass: Omit<typeof CardBase, 'new'> & (new(...args: any[]) => CardBase)|undefined;\n\n    main!: HTMLDivElement;\n    deleteButton?: HTMLButtonElement;\n    dragHandle?: HTMLButtonElement;\n\n    sortable?: InstanceType<typeof Sortable>;\n\n    async updateCard() {\n        return await Promise.all([\n            this.updateDeleteButton(),\n            this.updateSortingHandler(),\n        ]);\n    }\n\n    override update_() {\n        this.updateCard();\n    }\n\n    readonly minimumItemsToSort:number = 2;\n    readonly minimumChildrenToSort:number = 2;\n\n    async updateDeleteButton(forceState?: boolean) {\n        if (!this.deleteButton) return;\n        await anAnimationFrame();\n\n        // We set all kinds of attributes in here so that the Details/Summary pair doesn't override them.\n\n        if (this.parentGroup?.size && this.parentGroup.size >= this.minimumItemsToSort) {\n            this.deleteButton.style.opacity = '1';\n            this.deleteButton.ariaDisabled = 'false';\n            this.deleteButton.disabled = false;\n            this.deleteButton.setAttribute('data-force-disabled', 'false');\n            this.deleteButton.style.pointerEvents = 'auto';\n            this.deleteButton.setAttribute('data-force-pointer-events', 'true');\n            this.deleteButton.tabIndex = 0;\n            this.deleteButton.setAttribute('data-old-tabindex', '0');\n\n        } else {\n            this.deleteButton.style.opacity = '0.1';\n            this.deleteButton.ariaDisabled = 'true';\n            this.deleteButton.disabled = true;\n            this.deleteButton.setAttribute('data-force-disabled', 'true');\n            this.deleteButton.style.pointerEvents = 'none';\n            this.deleteButton.setAttribute('data-force-pointer-events', 'false');\n            this.deleteButton.tabIndex = -1;\n            this.deleteButton.setAttribute('data-old-tabindex', '-1');\n\n        }\n    }\n\n    async updateSortingHandler() {\n        if (!this.sortable) return;\n        await anAnimationFrame();\n\n        if ((this.children?.size || 0) >= this.minimumChildrenToSort) {\n            this.sortable?.option('ignore', undefined);\n            this.childrenContainer?.classList.remove('no-sorting');\n        } else {\n            this.sortable?.option('ignore', '*');\n            this.childrenContainer?.classList.add('no-sorting');\n        }\n    }\n\n    onSort(event: Sortable__.SortableEvent, added = false) {\n        if (!this.childClass) return;\n        if (event.from !== event.to && !added) return console.debug('Not sorting', this, event);\n        if (event.newIndex === undefined || (!added && event.newIndex === event.oldIndex)) return console.debug('No index change', this, event);\n\n        const displayItem = event.item.upgrades?.get(this.childClass);\n        if (!displayItem) return console.error('Child Class instance not found!', this, event);\n\n        this.children?.moveIndex(displayItem.parent, event.newIndex);\n        this.parent?.update();\n    }\n    readonly onSort_bound = this.onSort.bind(this);\n\n    onAdd(event: Sortable__.SortableEvent) {\n        if (!this.childClass) return;\n        if (event.from === event.to || event.to !== this.childrenContainer) return console.debug('Not adding', this, event);\n\n        const displayItem = event.item.upgrades?.get(this.childClass);\n        if (!displayItem) return console.error('The FOMOD Builder binding for this item was not found!', this, event);\n\n        if (displayItem.parent.inherited) displayItem.parent.inherited.parent = this.parent;\n\n        this.children?.add(displayItem.parent);\n        this.onSort(event, true);\n\n        this.parent?.updateWhole();\n    }\n    readonly onAdd_bound = this.onAdd.bind(this);\n\n    onRemove(event: Sortable__.SortableEvent) {\n        if (!this.childClass) return;\n        if (event.from === event.to || event.from !== this.childrenContainer) return console.debug('Not removing', this, event);\n\n        const displayItem = event.item.upgrades?.get(this.childClass);\n        if (!displayItem) return console.error('The FOMOD Builder binding for this item was not found!', this, event);\n\n        this.children?.delete(displayItem.parent);\n\n        this.parent?.updateWhole();\n    }\n    readonly onRemove_bound = this.onRemove.bind(this);\n\n    override async destroy_() {\n        const main = this.main;\n\n        const previousElemStyle = (this.main.previousSibling as HTMLElement|null)?.style;\n        if (previousElemStyle) previousElemStyle.zIndex = '1';\n\n        const summary = this.main.querySelector(':scope > .js-bcd-summary')?.upgrades?.get(BCDSummary);\n        if (summary) await summary.close(false, false, true, 500);\n\n        main.classList.add('animating-out');\n        if (getComputedStyle(main).animationName === 'none') return this.main.remove();\n\n        function finalize() {\n            if (previousElemStyle) previousElemStyle.zIndex = '';\n            main.remove();\n        }\n\n        //afterDelay(400, finalize);\n        main.addEventListener('animationend', finalize, {once: true});\n    }\n\n    animateIn(container: HTMLElement) {\n        if (this.main.style.animationName === 'none') return;\n\n        const previousSibling = container.lastElementChild instanceof HTMLElement ? container.lastElementChild : undefined;\n        if (!previousSibling) return;\n\n        const main = this.main;\n\n        previousSibling.style.zIndex = '1';\n        main.classList.add('animating-in');\n\n        // eslint-disable-next-line func-style -- I only want to init the function within an if statement\n        const finalize = function() {\n            previousSibling.style.zIndex = '';\n            main.classList.remove('animating-in');\n\n            main.removeEventListener('animationend', finalize);\n        };\n\n        //afterDelay(400, removeIndex);\n        main.addEventListener('animationend', finalize, {once: true});\n    }\n}\n\nconst deleteButtonTemplate = (document.getElementById('builder-main-steps-delete-button') as HTMLTemplateElement).content.firstElementChild as HTMLButtonElement;\nconst dragHandleTemplate = (document.getElementById('builder-main-steps-drag-handle') as HTMLTemplateElement).content.firstElementChild as HTMLButtonElement;\n\n/** Manages the first-party editor for entire FOMODs */\nexport class Fomod extends CardBase {\n    parent: mainClasses.Fomod;\n    parentGroup: undefined;\n    get childClass() { return Step; }\n    get children() { return this.parent.steps; }\n    get childrenContainer() { return this.parent.stepContainers['1st-party']; }\n\n    nameInput: HTMLInputElement;\n\n    /** The name of the mod */\n    get name(): string { return this.parent.moduleName; } set name(value: string) { this.parent.moduleName = value; }\n\n    imageInput: HTMLInputElement;\n\n    /** The image of the mod */\n    get image(): string { return this.parent.metaImage; } set image(value: string) { this.parent.metaImage = value; }\n\n    sortOrderMenu: HTMLMenuElement;\n    get sortOrder(): mainClasses.SortOrder { return this.parent.sortingOrder; } set sortOrder(value: mainClasses.SortOrder) { this.parent.sortingOrder = value; }\n\n    addStepBtn: HTMLButtonElement;\n\n    // I can't be bothered to explicitly set types on this\n    private changeEvtObj;\n    private dropdownEvtObj;\n    private addStepEvtObj;\n\n    constructor(parent: mainClasses.Fomod) {\n        super();\n\n        this.parent = parent;\n\n        this.changeEvtObj = {change: this.updateFromInput_bound};\n        this.dropdownEvtObj = {dropdownInput: this.updateFromInput_bound};\n        this.addStepEvtObj = {activate: parent.addStep_bound.bind(parent, undefined, undefined)};\n\n\n        this.main = document.getElementById(\"steps-builder-container\") as HTMLDivElement;\n        const stepsContainer = this.main.querySelector<HTMLDivElement>('div.builder-steps-steps-container')!;\n        this.parent.stepContainers['1st-party'] = stepsContainer;\n\n        const sortableEvents = {\n            onSort: this.onSort_bound,\n            onAdd: this.onAdd_bound,\n            onRemove: this.onRemove_bound,\n        } as const satisfies Sortable__.Options;\n        this.sortable = new Sortable(stepsContainer, Object.assign(sortableEvents, sortableSettings_steps));\n\n        this.nameInput = this.main.querySelector('input.builder-steps-mod-name')!;\n        registerForEvents(this.nameInput, this.changeEvtObj);\n\n        this.imageInput = this.main.querySelector('.builder-steps-mod-image input')!;\n        registerForEvents(this.imageInput, this.changeEvtObj);\n\n        this.sortOrderMenu = this.main.querySelector('menu.bcd-dropdown-sorting-order')!;\n        registerForEvents(this.sortOrderMenu, this.dropdownEvtObj);\n\n        this.addStepBtn = this.main.querySelector('button.builder-steps-add-child-btn')!;\n\n        registerForEvents(this.addStepBtn, this.addStepEvtObj);\n        registerUpgrade(this.main, this, null, false, true);\n    }\n\n    override updateFromInput_() {\n        this.name = this.nameInput.value;\n        this.image = this.imageInput.value;\n        const dropdownObj = this.sortOrderMenu.upgrades?.getExtends(BCDDropdown)?.[0];\n        if (dropdownObj) this.sortOrder = mainUI.translateDropdown(dropdownObj.selectedOption) as mainClasses.SortOrder;\n    }\n\n    override update_() {\n\n        this.nameInput.value = this.name; this.nameInput.dispatchEvent(new Event('input'));\n\n        this.imageInput.value = this.image; this.imageInput.dispatchEvent(new Event('input'));\n\n        this.sortOrderMenu.upgrades?.getExtends(BCDDropdown)?.[0]?.selectByString(mainUI.translateDropdown(this.sortOrder));\n\n        this.updateCard();\n    }\n\n    override async destroy_() {\n        unregisterForEvents(this.nameInput, this.changeEvtObj);\n        unregisterForEvents(this.imageInput, this.changeEvtObj);\n        unregisterForEvents(this.sortOrderMenu, this.dropdownEvtObj);\n        unregisterForEvents(this.addStepBtn, this.addStepEvtObj);\n        this.nameInput.value = '';\n        this.imageInput.value = '';\n        this.sortOrderMenu.upgrades?.getExtends(BCDDropdown)?.[0]?.selectByString(window.FOMODBuilder.storage.settings.defaultSortingOrder);\n    }\n}\nmainClasses.addUpdateObjects(mainClasses.Fomod, Fomod);\n\nconst stepTemplate = (document.getElementById('builder-main-steps-step') as HTMLTemplateElement).content.firstElementChild as HTMLDivElement;\n/** Manages the first-party editor for FOMOD Steps */\nexport class Step extends CardBase {\n    parent: mainClasses.Step;\n    get parentGroup() { return this.parent.inherited?.parent?.steps; }\n    get childClass() { return Group; }\n    get children() { return this.parent.groups; }\n    get childrenContainer() { return this.parent.groupContainers['1st-party']; }\n\n    nameDisplay: HTMLSpanElement;\n    groupCountDisplay: HTMLSpanElement;\n    optionCountDisplay: HTMLSpanElement;\n\n    get name(): string { return this.parent.name; } set name(value: string) { this.parent.name = value; }\n    nameInput: HTMLInputElement;\n\n    get sortOrder(): mainClasses.SortOrder { return this.parent.sortingOrder; } set sortOrder(value: mainClasses.SortOrder) { this.parent.sortingOrder = value; }\n    sortOrderMenu: HTMLMenuElement;\n\n    addGroupBtn: HTMLButtonElement;\n\n    constructor (parent: mainClasses.Step) {\n        super();\n        this.parent = parent;\n\n        this.main = stepTemplate.cloneNode(true) as HTMLDivElement;\n\n        const groupsContainer = this.main.querySelector<HTMLDivElement>('div.builder-steps-group-container')!;\n        this.parent.groupContainers['1st-party'] = groupsContainer;\n\n\n        const sortableEvents = {\n            onSort: this.onSort_bound,\n            onAdd: this.onAdd_bound,\n            onRemove: this.onRemove_bound,\n        } as const satisfies Sortable__.Options;\n        this.sortable = new Sortable(groupsContainer, Object.assign(sortableEvents, sortableSettings_groups));\n\n        this.nameInput = this.main.querySelector('input.bcd-builder-input')!;\n        registerForEvents(this.nameInput, {change: this.updateFromInput_bound});\n\n        this.sortOrderMenu = this.main.querySelector('menu.bcd-dropdown-sorting-order')!;\n        registerForEvents(this.sortOrderMenu, {dropdownInput: this.updateFromInput_bound});\n\n        this.addGroupBtn = this.main.querySelector('button.builder-steps-add-child-btn')!;\n        registerForEvents(this.addGroupBtn, {activate: parent.addGroup_bound.bind(parent, undefined, undefined)});\n\n        this.nameDisplay = this.main.querySelector('.builder-steps-step-title span.name')!;\n        this.groupCountDisplay = this.main.querySelector('span.builder-steps-step-group-count')!;\n        this.optionCountDisplay = this.main.querySelector('span.builder-steps-step-option-count')!;\n\n        this.deleteButton = deleteButtonTemplate.cloneNode(true) as HTMLButtonElement;\n        this.main.insertBefore(this.deleteButton, this.main.firstElementChild);\n\n        const dragHandle = dragHandleTemplate.cloneNode(true) as HTMLButtonElement;\n        this.main.insertBefore(dragHandle, this.main.firstElementChild);\n\n        registerForEvents(this.deleteButton, {activate: parent.destroy.bind(parent)});\n\n        const stepContainer = this.parent.inherited.containers?.['1st-party'] as HTMLDivElement;\n        if (!stepContainer) {console.warn('Step container not found!'); return;}\n\n        stepContainer.appendChild(this.main);\n        this.animateIn(stepContainer);\n\n        registerUpgrade(this.main, this, null, false, true);\n        componentHandler.upgradeElements(this.main);\n    }\n\n    override update_() {\n        this.nameInput.value = this.name; this.nameInput.dispatchEvent(new Event('input'));\n        this.sortOrderMenu.upgrades?.getExtends(BCDDropdown)?.[0]?.selectByString(mainUI.translateDropdown(this.sortOrder));\n\n        this.nameDisplay.textContent = this.name;\n        updatePluralDisplay(this.groupCountDisplay, this.parent.groups.size);\n        updatePluralDisplay(this.optionCountDisplay, [...this.parent.groups].reduce((currentCount, group) => currentCount + group.options.size, 0));\n\n        this.updateCard();\n    }\n\n    override updateFromInput_() {\n        this.name = this.nameInput.value;\n\n        const dropdownObj = this.sortOrderMenu.upgrades?.getExtends(BCDDropdown)?.[0];\n        if (dropdownObj) this.sortOrder = mainUI.translateDropdown(dropdownObj.selectedOption) as mainClasses.SortOrder;\n\n        this.nameDisplay.textContent = this.name;\n    }\n}\nmainClasses.addUpdateObjects(mainClasses.Step, Step);\n\n\nconst groupTemplate = (document.getElementById('builder-main-steps-group') as HTMLTemplateElement).content.firstElementChild as HTMLDivElement;\n/** Manages the first-party editor for FOMOD Groups */\nexport class Group extends CardBase {\n    parent: mainClasses.Group;\n    get parentGroup() { return this.parent.inherited?.parent?.groups; }\n\n    get childClass() { return Option; }\n    get children() { return this.parent.options; }\n    get childrenContainer() { return this.parent.optionContainers['1st-party']; }\n\n    nameDisplay: HTMLSpanElement;\n    optionCountDisplay: HTMLSpanElement;\n\n    get name(): string { return this.parent.name; } set name(value: string) { this.parent.name = value; }\n    nameInput: HTMLInputElement;\n\n    get sortOrder(): mainClasses.SortOrder { return this.parent.sortingOrder; } set sortOrder(value: mainClasses.SortOrder) { this.parent.sortingOrder = value; }\n    sortOrderMenu: HTMLMenuElement;\n\n    get selectionType(): mainClasses.GroupSelectType { return this.parent.type; } set selectionType(value: mainClasses.GroupSelectType) { this.parent.type = value; }\n    selectionTypeMenu: HTMLMenuElement;\n\n    addOptionBtn: HTMLButtonElement;\n\n    constructor (parent: mainClasses.Group) {\n        super();\n        this.parent = parent;\n\n        this.main = groupTemplate.cloneNode(true) as HTMLDivElement;\n\n        const optionsContainer = this.main.querySelector<HTMLDivElement>('div.builder-steps-option-container')!;\n        this.parent.optionContainers['1st-party'] = optionsContainer;\n        const sortableEvents = {\n            onSort: this.onSort_bound,\n            onAdd: this.onAdd_bound,\n            onRemove: this.onRemove_bound,\n        } as const satisfies Sortable__.Options;\n        this.sortable = new Sortable(optionsContainer, Object.assign(sortableEvents, sortableSettings_options));\n\n        this.nameInput = this.main.querySelector('input.builder-steps-group-name')!;\n        registerForEvents(this.nameInput, {change: this.updateFromInput_bound});\n\n        this.sortOrderMenu = this.main.querySelector('menu.bcd-dropdown-sorting-order')!;\n        registerForEvents(this.sortOrderMenu, {dropdownInput: this.updateFromInput_bound});\n\n        this.selectionTypeMenu = this.main.querySelector('menu.bcd-dropdown-group-type')!;\n        registerForEvents(this.selectionTypeMenu, {dropdownInput: this.updateFromInput_bound});\n\n        this.addOptionBtn = this.main.querySelector('button.builder-steps-add-child-btn')!;\n        registerForEvents(this.addOptionBtn, {activate: parent.addOption_bound.bind(parent, undefined, undefined)});\n\n        this.nameDisplay = this.main.querySelector('span.name')!;\n        this.optionCountDisplay = this.main.querySelector('span.builder-steps-group-option-count')!;\n\n        this.deleteButton = deleteButtonTemplate.cloneNode(true) as HTMLButtonElement;\n        this.main.insertBefore(this.deleteButton, this.main.firstElementChild);\n\n        registerForEvents(this.deleteButton, {activate: parent.destroy.bind(parent)});\n\n        const dragHandle = dragHandleTemplate.cloneNode(true) as HTMLButtonElement;\n        this.main.insertBefore(dragHandle, this.main.firstElementChild);\n\n        const groupContainer = this.parent.inherited.containers?.['1st-party'] as HTMLDivElement;\n        if (!groupContainer) {console.warn('Group container not found!'); return;}\n\n        groupContainer.appendChild(this.main);\n        this.animateIn(groupContainer);\n\n        registerUpgrade(this.main, this, null, false, true);\n        componentHandler.upgradeElements(this.main);\n    }\n\n    override update_() {\n        this.nameInput.value = this.name; this.nameDisplay.textContent = this.name;\n\n        this.sortOrderMenu.upgrades?.getExtends(BCDDropdown)?.[0]?.selectByString(mainUI.translateDropdown(this.sortOrder));\n\n        this.selectionTypeMenu.upgrades?.getExtends(BCDDropdown)?.[0]?.selectByString(mainUI.translateDropdown(this.selectionType));\n\n        this.nameDisplay.textContent = this.name;\n        updatePluralDisplay(this.optionCountDisplay, this.parent.options.size);\n\n        this.updateCard();\n    }\n\n    override updateFromInput_() {\n        this.name = this.nameInput.value;\n\n        const dropdownObj = this.sortOrderMenu.upgrades?.getExtends(BCDDropdown)?.[0];\n        if (dropdownObj) this.sortOrder = mainUI.translateDropdown(dropdownObj.selectedOption) as mainClasses.SortOrder;\n\n        const dropdownObj2 = this.selectionTypeMenu.upgrades?.getExtends(BCDDropdown)?.[0];\n        if (dropdownObj2) this.selectionType = mainUI.translateDropdown(dropdownObj2.selectedOption) as mainClasses.GroupSelectType;\n\n        this.nameDisplay.textContent = this.name;\n    }\n}\nmainClasses.addUpdateObjects(mainClasses.Group, Group);\n\nconst optionTemplate = (document.getElementById('builder-main-steps-option') as HTMLTemplateElement).content.firstElementChild as HTMLDivElement;\n\nexport class Option extends CardBase {\n    parent: mainClasses.Option;\n    get parentGroup() { return this.parent.inherited?.parent?.options; }\n\n    get childClass() { return DependencyFlag; }\n    get children() { return this.parent.flagsToSet; }\n    get childrenContainer() { return this.parent.flagsContainers['1st-party']; }\n\n    nameDisplay: HTMLSpanElement;\n    fileCountDisplay: HTMLSpanElement;\n    flagCountDisplay: HTMLSpanElement;\n\n    get name(): string { return this.parent.name; } set name(value: string) { this.parent.name = value; }\n    nameInput: HTMLInputElement;\n\n    get description(): string { return this.parent.description; } set description(value: string) { this.parent.description = value; }\n    descriptionInput: HTMLTextAreaElement;\n\n    get image(): string { return this.parent.image; } set image(value: string) { this.parent.image = value; }\n    imageInput: HTMLInputElement;\n\n    editStateConditionsButton: HTMLButtonElement;\n\n    get defaultState(): mainClasses.OptionState { return this.parent.typeDescriptor.defaultState; } set defaultState(value: mainClasses.OptionState) { this.parent.typeDescriptor.defaultState = value; }\n    defaultStateDropdown: HTMLMenuElement;\n\n    addFlagBtn: HTMLButtonElement;\n    override readonly minimumChildrenToSort = 0;\n\n    private addFlagEvtObj;\n\n    constructor (parent: mainClasses.Option) {\n        super();\n\n        this.parent = parent;\n\n        this.addFlagEvtObj = {activate: parent.addFlag_bound.bind(parent, undefined, undefined)};\n\n        this.main = optionTemplate.cloneNode(true) as HTMLDivElement;\n\n        this.nameInput = this.main.querySelector('input.builder-steps-option-name')!;\n        registerForEvents(this.nameInput, {change: this.updateFromInput_bound});\n\n        this.descriptionInput = this.main.querySelector('textarea.builder-steps-option-description')!;\n        registerForEvents(this.descriptionInput, {change: this.updateFromInput_bound});\n\n        this.imageInput = this.main.querySelector('input.js-relative-image-picker')!;\n        registerForEvents(this.imageInput, {change: this.updateFromInput_bound});\n\n        this.editStateConditionsButton = this.main.querySelector('button.builder-steps-condition-edit-btn')!;\n        //registerForEvents(this.editTypeButton, {activate: this.editType_bound});\n\n        this.defaultStateDropdown = this.main.querySelector('menu.bcd-dropdown-option-state')!;\n        registerForEvents(this.defaultStateDropdown, {dropdownInput: this.updateFromInput_bound});\n\n        this.nameDisplay = this.main.querySelector('span.name')!;\n        this.fileCountDisplay = this.main.querySelector('span.builder-steps-option-file-count')!;\n        this.flagCountDisplay = this.main.querySelector('span.builder-steps-option-flag-count')!;\n\n        this.deleteButton = deleteButtonTemplate.cloneNode(true) as HTMLButtonElement;\n        this.main.insertBefore(this.deleteButton, this.main.firstElementChild);\n        registerForEvents(this.deleteButton, {activate: parent.destroy.bind(parent)});\n\n        const flagsContainer = this.main.querySelector('div.builder-steps-option-set-flags-container') as HTMLDivElement;\n        this.parent.flagsContainers['1st-party'] = flagsContainer;\n\n        const sortableEvents = {\n            onSort: this.onSort_bound,\n            onAdd: this.onAdd_bound,\n            onRemove: this.onRemove_bound,\n        } as const satisfies Sortable__.Options;\n        this.sortable = new Sortable(flagsContainer, Object.assign(sortableEvents, sortableSettings_flags));\n\n        this.addFlagBtn = this.main.querySelector('.builder-steps-option-set-flags-body button.builder-steps-add-child-btn')!;\n        registerForEvents(this.addFlagBtn, this.addFlagEvtObj);\n\n        const dragHandle = dragHandleTemplate.cloneNode(true) as HTMLDivElement;\n        this.main.insertBefore(dragHandle, this.main.firstElementChild);\n\n        const optionContainer = this.parent.inherited.containers?.['1st-party'] as HTMLDivElement;\n        if (!optionContainer) {console.warn('Option container not found!'); return;}\n\n        this.animateIn(optionContainer);\n        optionContainer.appendChild(this.main);\n\n        registerUpgrade(this.main, this, null, false, true);\n        componentHandler.upgradeElements(this.main);\n    }\n\n    override update_() {\n        this.nameInput.value = this.name || '';               this.nameInput.dispatchEvent(new Event('change'));\n        this.descriptionInput.value = this.description || ''; this.descriptionInput.dispatchEvent(new Event('change'));\n        this.imageInput.value = this.image || '';             this.imageInput.dispatchEvent(new Event('change'));\n\n        this.defaultStateDropdown.upgrades?.getExtends(BCDDropdown)?.[0]?.selectByString(mainUI.translateDropdown(this.parent.typeDescriptor.defaultState));\n\n        this.nameDisplay.textContent = this.name || '';\n        updatePluralDisplay(this.fileCountDisplay, this.parent.files.size);\n        updatePluralDisplay(this.flagCountDisplay, this.parent.flagsToSet.size);\n\n        this.updateCard();\n    }\n\n    override updateFromInput_() {\n        this.name = this.nameInput.value || '';\n        this.description = this.descriptionInput.value || '';\n        this.image = this.imageInput.value || '';\n\n        const dropdownObj = this.defaultStateDropdown.upgrades?.getExtends(BCDDropdown)?.[0];\n        if (dropdownObj) this.parent.typeDescriptor.defaultState = mainUI.translateDropdown(dropdownObj.selectedOption) as mainClasses.OptionState;\n\n        this.nameDisplay.textContent = this.name;\n    }\n}\nmainClasses.addUpdateObjects(mainClasses.Option, Option);\n\nconst dependencyFlagTemplate = (document.getElementById('builder-steps-flag-template') as HTMLTemplateElement).content.firstElementChild as HTMLDivElement;\n\nclass DependencyFlag extends CardBase {\n    parent: mainClasses.DependencyFlag;\n    get parentGroup() { return this.parent.inherited?.parent?.flagsToSet; }\n\n    children: undefined;\n    childrenContainer: undefined;\n    childClass: undefined;\n\n    get name(): string { return this.parent.flag; } set name(value: string) { this.parent.flag = value; }\n    nameInput: HTMLInputElement;\n\n    get value(): string { return this.parent.value; } set value(value: string) { this.parent.value = value; }\n    valueInput: HTMLInputElement;\n\n    override readonly minimumItemsToSort = 0;\n\n    constructor (parent: mainClasses.DependencyFlag) {\n        super();\n\n        this.parent = parent;\n\n        this.main = dependencyFlagTemplate.cloneNode(true) as HTMLDivElement;\n\n        this.nameInput = this.main.querySelector('.builder-steps-flag-name input')!;\n        registerForEvents(this.nameInput, {change: this.updateFromInput_bound});\n\n        this.valueInput = this.main.querySelector('.builder-steps-flag-value input')!;\n        registerForEvents(this.valueInput, {change: this.updateFromInput_bound});\n\n        this.deleteButton = deleteButtonTemplate.cloneNode(true) as HTMLButtonElement;\n        this.main.insertBefore(this.deleteButton, this.main.firstElementChild);\n        registerForEvents(this.deleteButton, {activate: parent.destroy.bind(parent)});\n\n        const dragHandle = dragHandleTemplate.cloneNode(true) as HTMLDivElement;\n        this.main.insertBefore(dragHandle, this.main.firstElementChild);\n\n        const flagContainer = this.parent.inherited?.containers?.['1st-party'] as HTMLDivElement;\n        if (!flagContainer) {console.warn('Flag container not found!'); return;}\n\n\n        flagContainer.appendChild(this.main);\n        this.animateIn(flagContainer);\n\n        registerUpgrade(this.main, this, null, false, true);\n        componentHandler.upgradeElements(this.main);\n    }\n\n    override update_() {\n        this.nameInput.value = this.name; this.nameInput.dispatchEvent(new Event('change'));\n        this.valueInput.value = this.value; this.valueInput.dispatchEvent(new Event('change'));\n\n        this.updateCard();\n    }\n\n    override updateFromInput_() {\n        this.name = this.nameInput.value;\n        this.value = this.valueInput.value;\n    }\n}\nmainClasses.addUpdateObjects(mainClasses.DependencyFlag, DependencyFlag);\n"],"mappings":"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"}